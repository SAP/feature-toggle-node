version: 2

jobs:
  previous_node:
    docker:
      - image: circleci/node:14 # Future BAS node version
    working_directory: ~/repo    
    steps:
      - checkout      
      - run: npm install            
      - run: npm run ci      
      - run: ls -la
      - run: echo node 14 job finished successfully

  current_node:
    docker:
      - image: circleci/node:16.13.1 # Current BAS node version
    working_directory: ~/repo    
    steps:
      - checkout      
      - run: npm install            
      - run: npm run ci
      - run:
          name: Define environment variable with latest commit message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint
      - run:
          command: cat ./coverage/lcov.info | ./node_modules/.bin/coveralls
          environment:
            COVERALLS_SERVICE_NAME: circle-ci
            COVERALLS_GIT_BRANCH: ${CIRCLE_BRANCH}
      - run: ls -la
      - run: echo node 16 job finished successfully

  future_node:
    docker:
      - image: circleci/node:18 # Future BAS node version
    working_directory: ~/repo    
    steps:
      - checkout      
      - run: npm install            
      - run: npm run ci      
      - run: ls -la
      - run: echo node 18 job finished successfully

  compliance:
    docker:
      - image: cimg/python:3.10.0
    working_directory: ~/workdir
    steps:
      - checkout
      - run:
          name: compliance check
          command: |
            pip3 install --user reuse
            ~/.local/bin/reuse lint

  deploy-npm:
    docker:
      - image: circleci/node:16
    working_directory: ~/repo    
    steps:
      - checkout      
      - run: npm install            
      - run: npm run ci
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
      - run: ls -la
      - run:
          name: Publish package
          command: npm publish --access public
      - run: echo Deploy to NPM finished successfully

workflows:
  version: 2
  build:
    jobs:
      - current_node
      - future_node
      - compliance
  deploy:
    jobs:     
      - deploy-npm:          
          filters: # <<< Deploy only Tags
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/          
